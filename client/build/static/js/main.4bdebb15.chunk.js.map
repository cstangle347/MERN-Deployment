{"version":3,"sources":["views/Main.jsx","components/Form.jsx","views/NewPet.jsx","views/AllPets.jsx","views/EditPet.jsx","components/Adopt.jsx","views/Pet.jsx","App.js","serviceWorker.js","index.js"],"names":["Main","className","Button","variant","color","to","Form","initalState","method","url","useState","formState","setFormState","errors","setErrors","handleChange","event","target","name","value","onSubmit","preventDefault","axios","data","then","res","navigate","catch","err","console","log","type","onChange","properties","message","rows","cols","description","skill1","skill2","skill3","NewPet","AllPets","pets","setPets","useEffect","get","map","pet","key","_id","onClick","UpdatePet","id","setPet","props","successCallback","e","delete","Pet","class","Adopt","App","path","EditPet","from","noThrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4bdebb15.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from '@reach/router';\n\n\nexport default function Main() {\n\n    return(\n        <div className=\"jumbotron text-center\">\n            <h1 className=\"display-4\">West Town Pet Shelter</h1>\n            <Button variant=\"outlined\" color=\"primary\"><Link to=\"/pets\">Pets</Link></Button>{' '}\n            <Button variant=\"outlined\" color=\"primary\"><Link to=\"/pets/new\">Add a pet to the Shelter</Link></Button>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nfunction Form ({ initalState, method, url }) {\n  const [formState, setFormState] = useState (initalState);\n  const [errors, setErrors] = useState({});\n\n  function handleChange(event){\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]:value\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    axios({\n      method,\n      url,\n      data: formState\n    })\n      .then(res => {\n        if(res.data.errors) {\n          setErrors(res.data.errors);\n        } else {\n        navigate(\"/\");\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  return(\n    <form onSubmit={ handleSubmit }>\n      <div>\n        <label>Name: </label>\n        <input\n          type= \"text\"\n          name= \"name\"\n          value= { formState.name }\n          onChange={ handleChange }\n        />\n        { errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p> : \"\" }\n      </div>\n\n      <div>\n        <label>Type: </label>\n        <input\n          type=\"text\"\n          name= \"type\"\n          value= { formState.type }\n          onChange={ handleChange }\n        />\n        { errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p> : \"\" }\n      </div>\n\n      <div>\n        <label>Description: </label>\n        <textarea\n          rows= \"3\"\n          cols= \"20\"\n          name= \"description\"\n          value= { formState.description }\n          onChange={ handleChange }\n        />\n        { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\" }\n      </div>\n      <hr />\n      <p>Optional:</p>\n      <div>\n        <label>Skill 1: </label>\n        <input\n          name= \"skill1\"\n          value= { formState.skill1 }\n          onChange={ handleChange }\n        />\n      </div>\n\n      <div>\n        <label>Skill 2: </label>\n        <input\n          name= \"skill2\"\n          value= { formState.skill2 }\n          onChange={ handleChange }\n        />\n      </div>\n\n    <div>\n      <label>Skill 3: </label>\n      <input\n        name= \"skill3\"\n        value= { formState.skill3 }\n        onChange={ handleChange }\n      />\n    </div>\n\n    <input className=\"btn btn-outline-success\" type= \"Submit\"/>\n    </form>\n\n  )\n\n};\nexport default Form;","import React from 'react';\nimport Form from '../components/Form';\n\nconst NewPet = () => {\n  return (\n    <>\n      <h3>Know a pet in need of a good home?</h3>\n      <hr />\n      <Form\n        initalState= {{\n          name: \"\",\n          type: \"\",\n          description: \"\",\n          skill1: \"\",\n          skill2: \"\",\n          skill3: \"\"\n        }}\n        method= \"post\"\n        url= \"http://localhost:8000/api/pets\"\n      />\n    </>\n  )\n}\nexport default NewPet;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\n\nfunction AllPets() {\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/pets\")\n      .then(res => setPets(res.data));\n  },[])\n\n  // const removeFromDom = id => {\n  //   const newList = pets.filter(pet => pet._id !== id);\n  //   setPets(newList)\n  // };\n\nreturn (\n  <>\n    <h3>Give one of these pets a good home today!</h3>\n    <table className= \"table table-striped\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Type</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {pets.map(pet => (\n          <tr key={pet._id}>\n            <td>{pet.name}</td>\n            <td>{pet.type}</td>\n            <td>\n              <button className=\"btn btn-outline-info btn-lg\" onClick={()=> navigate(\"/pets/\" + pet._id )}>Details</button>{' '}\n              <button className=\"btn btn-outline-warning btn-lg\" onClick={()=> navigate(\"/pets/\" + pet._id + \"/edit\")}>Edit</button>{' '}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n)\n\n}\n\nexport default AllPets;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Form from '../components/Form';\n\nfunction UpdatePet({ id }) {\n  const [pet, setPet] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/pets/\" + id)\n      .then(res => setPet(res.data))\n  },[id]);\n\n    if(pet === null) return 'Loading...';\n\n  return(\n    <>\n      <h3>Edit {pet.name}</h3>\n      <hr />\n      <Form\n        initalState= { pet }\n        method=\"put\"\n        url={ \"http://localhost:8000/api/pets/\" + id}\n      />\n    </>\n  )\n};\nexport default UpdatePet;","import React from 'react'\nimport axios from 'axios';\n\n\nexport default props => {\n    const { id, successCallback } = props;\n    const adoptPet = e => {\n      axios.delete('http://localhost:8000/api/pets/' + id)\n        .then(res => {\n          successCallback();\n        })\n    }\n    return (\n        <button className=\"btn btn-outline-success btn-lg\" onClick={adoptPet}>\n            Adopt\n        </button>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport Adopt from '../components/Adopt';\n\nfunction Pet( props ) {\n  const [pet, setPet] = useState(null);\n  console.log(Pet)\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/pets/\" + props.id)\n      .then(res => setPet(res.data));\n  }, [props.id]);\n\n  if(pet == null) return \"Loading ... \";\n\n  return (\n    <>\n    <div className=\"card border-info mb-1\" >\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{pet.name}</h3>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Pet Type: {pet.type}</h6>\n        <p className=\"card-text\">Description: {pet.description}</p>\n        <div class=\"card-header\">\n        Skills\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">{pet.skill1}</li>\n          <li className=\"list-group-item\">{pet.skill2}</li>\n          <li className=\"list-group-item\">{pet.skill3}</li>\n        </ul>\n      </div>\n      <Adopt id= {pet._id} successCallback= {() => navigate(\"/\")}/>\n      <br />\n    </div> \n    </>\n  )\n};\nexport default Pet;","import React from 'react';\nimport './App.css';\nimport { Router, Redirect } from '@reach/router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Main from './views/Main';\nimport NewPet from './views/NewPet';\nimport AllPets from './views/AllPets';\nimport EditPet from './views/EditPet';\nimport Pet from './views/Pet';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Main />\n      <div className='text-center'>\n        <Router>\n          <NewPet path = 'pets/new' />\n          <EditPet path = 'pets/:id/edit' />\n          <Pet path = 'pets/:id' />\n          <AllPets path = 'pets' />\n          <Redirect to = 'pets' from = '/' noThrow />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}